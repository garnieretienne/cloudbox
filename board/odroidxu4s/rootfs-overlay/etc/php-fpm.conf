[global]

; Path to error log file. If it's set to "syslog", log is sent to syslogd
; instead of being written in a local file.
error_log = syslog

[www]

; Choose how the process manager will control the number of child processes.
; Possible values: static, ondemand, dynamic. This option is mandatory.
; 	static - the number of child processes is fixed (pm.max_children).
;     ondemand - the processes spawn on demand (when requested, as opposed to
; 		dynamic, where pm.start_servers are started when the service is started.
; 	dynamic - the number of child processes is set dynamically based on the
; 	following directives: pm.max_children, pm.start_servers,
; 	pm.min_spare_servers, pm.max_spare_servers.
pm = dynamic

; The number of child processes to be created when pm is set to static and the
; maximum number of child processes to be created when pm is set to dynamic.
; This option is mandatory.
pm.max_children = 32

; The number of child processes created on startup. Used only when pm is set to
; dynamic.
; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
pm.start_servers = 16

; The desired minimum number of idle server processes. Used only when pm is set
; to dynamic. Also mandatory in this case.
pm.min_spare_servers = 16

; The desired maximum number of idle server processes. Used only when pm is set
; to dynamic. Also mandatory in this case.
pm.max_spare_servers = 32

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries.
; For endless request processing specify '0'.
pm.max_requests = 0

; The address on which to accept FastCGI requests.
; Valid syntaxes are: 'ip.add.re.ss:port', 'port', '/path/to/unix/socket'.
; This option is mandatory for each pool.
listen = /var/run/php-fpm.sock

; Set permissions for unix socket, if one is used.
listen.owner = app
listen.group = app

; Unix user and group of FPM processes. This option is mandatory.
user = app
group = app

